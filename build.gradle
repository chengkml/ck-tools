/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Spring Boot Gradle plugin to add support for building a Spring Boot application.
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    // Spring Boot Starter Web dependency
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Boot Starter Data JPA dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // H2 Database dependency
    runtimeOnly 'com.h2database:h2'
    // 添加 Lombok 依赖
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    // 添加 Spring Security 依赖
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 添加 JPA 和 Hibernate 依赖
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    // 添加 Baidu UidGenerator 依赖
    implementation 'com.xfvape.uid:uid-generator:0.0.4-RELEASE'

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// No need to define mainClass explicitly as Spring Boot will handle it
